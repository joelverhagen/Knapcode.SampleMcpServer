name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    permissions:
      id-token: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x
          global-json-file: "./global.json"
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release
      - name: Pack
        run: dotnet pack --configuration Release -o ./artifacts
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Knapcode.SampleMcpServer
          path: ./artifacts
      - name: Clone MCP Registry and build publisher tool
        shell: pwsh
        run: |
          cd ${{ runner.temp }}

          # Show go version
          go version

          # Install Microsoft Go
          Invoke-WebRequest `
              https://raw.githubusercontent.com/microsoft/go-infra/refs/heads/main/goinstallscript/powershell/go-install.ps1 `
              -OutFile go-install.ps1
          ./go-install.ps1

          # Enable compliant crypto
          $env:GOEXPERIMENT = "systemcrypto"

          # Clone and build the publisher tool
          git clone --branch v1.3.3 https://github.com/modelcontextprotocol/registry
          cd registry
          go build -o ./bin/mcp-publisher.exe ./cmd/publisher

          # Run the tool
          ./bin/mcp-publisher.exe --help

          # Show go version
          go version
      - name: NuGet login (OIDC â†’ temp API key)
        uses: NuGet/login@v1
        id: login
        with:
          user: joelverhagen
#       - name: NuGet push
#        run: dotnet nuget push artifacts/*.nupkg --api-key ${{steps.login.outputs.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json
